services:
  espocrm:
    build:
      context: .
      dockerfile: Dockerfile
    image: espocrm-custom:latest
    container_name: espocrm
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.espocrm.rule=Host(`crm.kwameoilandgas.ao`)"
      - "traefik.http.services.espocrm.loadbalancer.server.port=80"
      - "traefik.http.routers.espocrm.entrypoints=websecure"
      - "traefik.http.routers.espocrm.tls.certresolver=letsencrypt"
    depends_on:
      espocrm-db:
        condition: service_healthy
      espocrm-redis:
        condition: service_healthy
    environment:
      - ESPOCRM_DATABASE_PLATFORM=Mysql
      - ESPOCRM_DATABASE_HOST=espocrm-db
      - ESPOCRM_DATABASE_PORT=3306
      - ESPOCRM_DATABASE_NAME=${DB_NAME:-espocrm}
      - ESPOCRM_DATABASE_USER=${DB_USER:-espocrm}
      - ESPOCRM_DATABASE_PASSWORD=${DB_PASSWORD:-espocrm_password}
      - ESPOCRM_ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ESPOCRM_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - ESPOCRM_SITE_URL=${SITE_URL:-https://crm.kwameoilandgas.ao}
      - ESPOCRM_CONFIG_USE_CACHE=true
      - ESPOCRM_CONFIG_REDIS_HOST=espocrm-redis
      - ESPOCRM_CONFIG_REDIS_PORT=6379
    volumes:
      - espocrm_data:/var/www/html
      - ./custom:/var/www/html/custom
      - ./client/custom:/var/www/html/client/custom
      - ./data/upload:/var/www/html/data/upload
      - ./data/logs:/var/www/html/data/logs
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/client/espo.min.js"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s

  espocrm-daemon:
    build:
      context: .
      dockerfile: Dockerfile
    image: espocrm-custom:latest
    container_name: espocrm-daemon
    restart: always
    depends_on:
      - espocrm
    environment:
      - ESPOCRM_DATABASE_PLATFORM=Mysql
      - ESPOCRM_DATABASE_HOST=espocrm-db
      - ESPOCRM_DATABASE_PORT=3306
      - ESPOCRM_DATABASE_NAME=${DB_NAME:-espocrm}
      - ESPOCRM_DATABASE_USER=${DB_USER:-espocrm}
      - ESPOCRM_DATABASE_PASSWORD=${DB_PASSWORD:-espocrm_password}
    command: ["sh", "-c", "sleep 30 && cron -f"]
    volumes:
      - espocrm_data:/var/www/html
      - ./custom:/var/www/html/custom
      - ./client/custom:/var/www/html/client/custom
      - ./data/upload:/var/www/html/data/upload
      - ./data/logs:/var/www/html/data/logs
    networks:
      - dokploy-network

  espocrm-db:
    image: mariadb:10.11
    container_name: espocrm-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${DB_NAME:-espocrm}
      - MYSQL_USER=${DB_USER:-espocrm}
      - MYSQL_PASSWORD=${DB_PASSWORD:-espocrm_password}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 30s

  espocrm-redis:
    image: redis:7-alpine
    container_name: espocrm-redis
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  espocrm_data:
    driver: local
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  dokploy-network:
    external: true